*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

@font-face {
  font-family: 'TTLakes-Medium';
  src: url('../../fonts/TTLakes-Medium.ttf');
}

@font-face {
  font-family: 'TTLakes-Black';
  src: url('../../fonts/TTLakes-Black.ttf');
}

@font-face {
  font-family: 'TTLakes-Bold';
  src: url('../../fonts/TTLakes-Bold.ttf');
}

@font-face {
  font-family: 'TTLakes-Thin';
  src: url('../../fonts/TTLakes-Thin.ttf');
}

.body {
  font-family: 'TTLakes-Thin';
  background-color: #f8f8f8;
  font-size: 16px;
  letter-spacing: -0.2px;
}

.container {
  padding: 0 16px;
  margin: 0 auto;
  // background-color: #f8f8f8;
}

.section-title {
  //   color: #7e7e82;
  text-transform: uppercase;
  padding: 16px 0;
}

.background-for-section-title {
  background: linear-gradient(30deg, #f8f8f8 0%, #ffffff 98.61%);
}

.brands {
  display: none;
  overflow-x: auto;
  margin-top: 16px;

  &__card-item {
    width: 240px;
    padding: 20px 16px;
    border: 1px solid #eaeaea;
    background-color: #fff;
    // margin-right: 16px;
    border-radius: 6px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
}

.check-partner-button {
  height: 40px;
  width: 40px;
  border-radius: 50%;
  border: 2px solid #ff3e79;
  position: relative;
  cursor: pointer;
}

.check-partner-button:hover {
  // background-color: #ff3e79;
  transition: all 200ms;
  box-shadow: #cecece 0px 0px 5px;
}

.check-partner-button::before,
.check-partner-button::after {
  content: '';
  display: block;
  height: 8px;
  width: 2px;
  background-color: #ff3e79;
  position: absolute;
  top: 50%;
  left: 50%;
  border-radius: 5px;
}

.check-partner-button::before {
  transform: translate(-50%, calc(-50% + -2.5px)) rotate(-45deg);
}

.check-partner-button::after {
  transform: translate(-50%, calc(-50% + 2px)) rotate(45deg);
}

.mySwiper {
  position: relative;
  overflow-x: hidden !important;
  overflow-y: visible !important;
  height: 110px;
  margin-top: 16px;
}

.swiper-slide {
  height: 80px !important;
  width: 240px !important;
  margin-right: 16px !important;
}

.swiper-pagination-bullet {
  width: 12px !important;
  height: 12px !important;
  background-color: #b5b6bc !important;
}

.swiper-pagination {
  top: 85px;
}

.collapse-button {
  display: none;
}

@media (min-width: 768px) {
  // не уверен, что контейнер нужно сужать подобным способом, возможно он должен быть эластичным? (вместе с контентом)
  .container {
    max-width: 720px;
  }

  .brands {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 2%;

    &__card-item {
      width: 32%;
      margin-bottom: 16px;
    }
  }

  .collapse-button {
    display: block;
    margin-top: 8px;
    position: relative;
    padding-left: 20px;
    font-family: 'TTLakes-Medium';
    font-size: 16px;
  }

  .collapse-button::before {
    content: '';
    position: absolute;
    // не уверен, что это правильный способ выравнивания псевдоэлемента
    top: 5px;
    left: 5px;
    width: 10px;
    height: 10px;
    background: url('../../assets/icons/icon-read-more.svg') no-repeat;
  }

  .collapse-button:hover {
    cursor: pointer;
  }

  .collapse-button.content-is-collapsed::before {
    // сам svg немного обрезан, хотя экспортился норм. Кончики нижней стрелки почему-то обрезаны
    top: 7px;
    transform: rotate(180deg);
  }

  .mobile-only {
    display: none;
  }
}

@media (min-width: 1120px) {
  .container {
    max-width: 1054px;
  }

  .brands {
    // 1 способ подсказал парень из чата, что 3 гэпа по 2% => 94 / 4 = 23.5% не очень удобно считать каждый раз. Гридом похоже проще. С ними не работал, но походу надо изучить
    justify-content: flex-start;
    gap: 2%;

    // 2 способ (тоже подсказал парень из чата)
    // display: grid;
    // grid-template-columns: repeat(4, 1fr);
    // column-gap: 16px;
    // row-gap: 16px;

    &__card-item {
      // 1 способ
      width: 23.5%;
      //  2 способ
      // width: 100%;
      // margin-bottom: 16px;
    }
  }
}
